using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

[RequireComponent(typeof(Rigidbody2D))]
public class Rolly : MonoBehaviour
{
    [SerializeField] GameObject platform;
    [SerializeField] GameObject drawManager;
    [SerializeField] GameObject winPanel;
    [SerializeField] float initialPush = 100;
    [SerializeField] float speedForce = 100;
    [SerializeField] float speedForceUp = 100;
    [SerializeField] MusicManager musicManager;

    private bool canPush = true;
    private Rigidbody2D rb;

    private void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        platform.SetActive(false);
        drawManager.SetActive(false);
        if (canPush)
        {
            rb.AddForce(transform.right * initialPush);
            canPush = false;
        }
    }


    private void OnTriggerEnter2D(Collider2D collision)
    {
        if(collision.gameObject.tag == "Finish")
        {
            drawManager.SetActive(false);
            winPanel.SetActive(true);
            musicManager.SuccessSFX();
            this.enabled = false;
        }

        if(collision.gameObject.tag == "SpeedR")
        {
            Vector3 boost = new Vector3(rb.velocity.x + speedForce, rb.velocity.y, 0);
            //rb.AddForce(transform.right * speedForce);
            rb.velocity = boost;
        }

        if(collision.gameObject.tag == "SpeedL")
        {
            Vector3 boost = new Vector3(rb.velocity.x + -speedForce, rb.velocity.y, 0);
            rb.velocity = boost;
        }

        if (collision.gameObject.tag == "SpeedU")
        {
            Vector3 boost = new Vector3(rb.velocity.x, rb.velocity.y + speedForceUp, 0);
            rb.velocity = boost;
        }

        if(collision.gameObject.tag == "Floating")
        {
            rb.gravityScale = 0;
        }
    }

    private void OnTriggerStay2D(Collider2D collision)
    {
        if (collision.gameObject.tag == "Floating")
        {
            Vector3 upwards = new Vector3(rb.velocity.x, rb.velocity.y + 1 * Time.deltaTime, 0);
            rb.velocity = upwards;
        }
    }

    private void OnTriggerExit2D(Collider2D collision)
    {
        if (collision.gameObject.tag == "Floating")
        {
            rb.gravityScale = 0.8f;
        }
            
    }

    private void OnCollisionEnter2D(Collision2D collision)
    {
        if(collision.gameObject.tag == "Obstacle" && this.enabled == true)
        {
            Scene scene = SceneManager.GetActiveScene();
            SceneManager.LoadScene(scene.name);
        }
    }
}
